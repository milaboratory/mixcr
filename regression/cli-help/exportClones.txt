Usage: mixcr exportClones [--chains <chains>] [--filter-out-of-frames] [--filter-stops]
                          [--split-by-tags <(Molecule|Cell|Sample)>] [--split-files-by
                          <splitFilesBy>]... [--dont-split-files] [--impute-germline-on-export]
                          [--dont-impute-germline-on-export] [--add-export-clone-table-splitting <
                          (geneLabel|tag):key>] [--reset-export-clone-table-splitting]
                          [--add-export-clone-grouping <(geneLabel|tag):key>]
                          [--reset-export-clone-grouping] [--export-productive-clones-only]
                          [--no-header] [--drop-default-fields] [--prepend-columns]
                          [--not-covered-as-empty] [-targets] [-vHit] [-dHit] [-jHit] [-cHit]
                          [-vGene] [-dGene] [-jGene] [-cGene] [-vFamily] [-dFamily] [-jFamily]
                          [-cFamily] [-vHitScore] [-dHitScore] [-jHitScore] [-cHitScore]
                          [-vHitsWithScore] [-dHitsWithScore] [-jHitsWithScore] [-cHitsWithScore]
                          [-vHits] [-dHits] [-jHits] [-cHits] [-vGenes] [-dGenes] [-jGenes]
                          [-cGenes] [-vFamilies] [-dFamilies] [-jFamilies] [-cFamilies]
                          [-vAlignment] [-dAlignment] [-jAlignment] [-cAlignment] [-vAlignments]
                          [-dAlignments] [-jAlignments] [-cAlignments] [-nFeature
                          <gene_feature>]... [-allNFeatures [<from_reference_point>
                          <to_reference_point>]]... [-qFeature <gene_feature>]... [-allQFeatures
                          [<from_reference_point> <to_reference_point>]]... [-aaFeature
                          <gene_feature>]... [-allAAFeatures [<from_reference_point>
                          <to_reference_point>]]... [-nFeatureImputed <gene_feature>]...
                          [-allNFeaturesImputed [<from_reference_point> <to_reference_point>]]...
                          [-aaFeatureImputed <gene_feature>]... [-allAAFeaturesImputed
                          [<from_reference_point> <to_reference_point>]]... [-minFeatureQuality
                          <gene_feature>]... [-allMinFeaturesQuality [<from_reference_point>
                          <to_reference_point>]]... [-allNFeaturesWithMinQuality
                          [<from_reference_point> <to_reference_point>]]...
                          [-allNFeaturesImputedWithMinQuality [<from_reference_point>
                          <to_reference_point>]]... [-avrgFeatureQuality <gene_feature>]...
                          [-allAvrgFeaturesQuality [<from_reference_point>
                          <to_reference_point>]]... [-lengthOf <gene_feature>]... [-allLengthOf
                          [<from_reference_point> <to_reference_point>]]... [-nMutations
                          <gene_feature>]... [-allNMutations [<from_reference_point>
                          <to_reference_point>]]... [-nMutationsRelative <gene_feature>
                          <relative_to_gene_feature>]... [-aaMutations <gene_feature>]...
                          [-allAAMutations [<from_reference_point> <to_reference_point>]]...
                          [-aaMutationsRelative <gene_feature> <relative_to_gene_feature>]...
                          [-mutationsDetailed <gene_feature>]... [-allMutationsDetailed
                          [<from_reference_point> <to_reference_point>]]...
                          [-mutationsDetailedRelative <gene_feature> <relative_to_gene_feature>]...
                          [-positionInReferenceOf <reference_point>]... [-allPositionsInReference
                          [<from_reference_point> <to_reference_point>]]... [-positionOf
                          <reference_point>]... [-allPositions [<from_reference_point>
                          <to_reference_point>]]... [-defaultAnchorPoints] [-cloneId] [-readCount]
                          [-readFraction] [-targetSequences] [-targetQualities]
                          [-vIdentityPercents] [-dIdentityPercents] [-jIdentityPercents]
                          [-cIdentityPercents] [-vBestIdentityPercent] [-dBestIdentityPercent]
                          [-jBestIdentityPercent] [-cBestIdentityPercent] [-chains] [-topChains]
                          [-geneLabel <label>]... [-tagCounts] [-cellId [<(none|space|dash)>]]...
                          [-tags <(Molecule|Cell|Sample)>]... [-uniqueTagCount <
                          (Molecule|Cell|Sample)>]... [-uniqueTagFraction <(Molecule|Cell|Sample)
                          >]... [-cellGroup] [-hasStops <gene_feature>]... [-isOOF
                          <gene_feature>]... [-isProductive <gene_feature>]... [--force-overwrite]
                          [--no-warnings] [--verbose] [--help] data.(clns|clna) [table.tsv]
Export assembled clones into tab delimited file.
      data.(clns|clna)       Path to input file with clones
      [table.tsv]            Path where to write export table.
                             If `--split-files-by` is specified (or was set in preset), than
                               command will write several files `{outputDir}/{outputFileName}.
                               {suffix}.tsv`
                             Will write to output if omitted.
  -c, --chains <chains>      Limit export to specific chain (e.g. TRA or IGH) (fractions will be
                               recalculated).
                               Default value determined by the preset.
  -o, --filter-out-of-frames Exclude clones with out-of-frame clone sequences (fractions will be
                               recalculated).
                               Default value determined by the preset.
  -t, --filter-stops         Exclude sequences containing stop codons (fractions will be
                               recalculated).
                               Default value determined by the preset.
      --split-by-tags <(Molecule|Cell|Sample)>
                             Split clones by tag type. Will be calculated from export columns if
                               not specified.
                               Default value determined by the preset.
      --split-files-by <splitFilesBy>
                             Split files by (currently the only supported value is "geneLabel:
                               reliableChain" etc... ).
                               Default value determined by the preset.
      --dont-split-files     Don't split files.
      --impute-germline-on-export
                             Export nucleotide sequences using letters from germline (marked
                               lowercase) for uncovered regions
      --dont-impute-germline-on-export
                             Export nucleotide sequences only from covered region
      --add-export-clone-table-splitting <(geneLabel|tag):key>
                             Add key to split output files with clone tables.
      --reset-export-clone-table-splitting
                             Reset all file splitting for output clone tables.
      --add-export-clone-grouping <(geneLabel|tag):key>
                             Add key to group clones in the output clone tables.
      --reset-export-clone-grouping
                             Reset all clone grouping in the output clone tables.
      --export-productive-clones-only
                             Export only productive clonotypes.
      --no-header            Don't print first header line, print only data
                               Default value determined by the preset.
      --drop-default-fields  Don't export fields from preset.
      --prepend-columns      Added columns will be inserted before default columns. By default
                               columns will be added after default columns
      --not-covered-as-empty Export not covered regions as empty text.
  -f, --force-overwrite      Force overwrite of output file(s).
      -nw, --no-warnings     Suppress all warning messages.
      --verbose              Verbose messages.
  -h, --help                 Show this help message and exit.
Possible fields to export
      -targets               Export number of targets
      -vHit                  Export best V hit
      -dHit                  Export best D hit
      -jHit                  Export best J hit
      -cHit                  Export best C hit
      -vGene                 Export best V hit gene name (e.g. TRBV12-3 for TRBV12-3*00)
      -dGene                 Export best D hit gene name (e.g. TRBV12-3 for TRBV12-3*00)
      -jGene                 Export best J hit gene name (e.g. TRBV12-3 for TRBV12-3*00)
      -cGene                 Export best C hit gene name (e.g. TRBV12-3 for TRBV12-3*00)
      -vFamily               Export best V hit family name (e.g. TRBV12 for TRBV12-3*00)
      -dFamily               Export best D hit family name (e.g. TRBV12 for TRBV12-3*00)
      -jFamily               Export best J hit family name (e.g. TRBV12 for TRBV12-3*00)
      -cFamily               Export best C hit family name (e.g. TRBV12 for TRBV12-3*00)
      -vHitScore             Export score for best V hit
      -dHitScore             Export score for best D hit
      -jHitScore             Export score for best J hit
      -cHitScore             Export score for best C hit
      -vHitsWithScore        Export all V hits with score
      -dHitsWithScore        Export all D hits with score
      -jHitsWithScore        Export all J hits with score
      -cHitsWithScore        Export all C hits with score
      -vHits                 Export all V hits
      -dHits                 Export all D hits
      -jHits                 Export all J hits
      -cHits                 Export all C hits
      -vGenes                Export all V gene names (e.g. TRBV12-3 for TRBV12-3*00)
      -dGenes                Export all D gene names (e.g. TRBV12-3 for TRBV12-3*00)
      -jGenes                Export all J gene names (e.g. TRBV12-3 for TRBV12-3*00)
      -cGenes                Export all C gene names (e.g. TRBV12-3 for TRBV12-3*00)
      -vFamilies             Export all V gene family anmes (e.g. TRBV12 for TRBV12-3*00)
      -dFamilies             Export all D gene family anmes (e.g. TRBV12 for TRBV12-3*00)
      -jFamilies             Export all J gene family anmes (e.g. TRBV12 for TRBV12-3*00)
      -cFamilies             Export all C gene family anmes (e.g. TRBV12 for TRBV12-3*00)
      -vAlignment            Export best V alignment
      -dAlignment            Export best D alignment
      -jAlignment            Export best J alignment
      -cAlignment            Export best C alignment
      -vAlignments           Export all V alignments
      -dAlignments           Export all D alignments
      -jAlignments           Export all J alignments
      -cAlignments           Export all C alignments
      -nFeature <gene_feature>
                             Export nucleotide sequence of specified gene feature
      -allNFeatures [<from_reference_point> <to_reference_point>]
                             Export nucleotide sequences for all gene features between specified
                               reference points (in separate columns).
                             For example, `-allNFeatures FR3Begin FR4End` will export `-nFeature
                               FR3`, `-nFeature CDR3`, `-nFeature FR4`.
                             By default, boundaries will be got from analysis parameters if
                               possible or `FR1Begin FR4End` otherwise.
      -qFeature <gene_feature>
                             Export quality string of specified gene feature
      -allQFeatures [<from_reference_point> <to_reference_point>]
                             Export quality string for all gene features between specified
                               reference points (in separate columns).
                             For example, `-allQFeatures FR3Begin FR4End` will export `-qFeature
                               FR3`, `-qFeature CDR3`, `-qFeature FR4`.
                             By default, boundaries will be got from analysis parameters if
                               possible or `FR1Begin FR4End` otherwise.
      -aaFeature <gene_feature>
                             Export amino acid sequence of specified gene feature
      -allAAFeatures [<from_reference_point> <to_reference_point>]
                             Export amino acid sequence for all gene features between specified
                               reference points (in separate columns).
                             For example, `-allAAFeatures FR3Begin FR4End` will export `-aaFeature
                               FR3`, `-aaFeature CDR3`, `-aaFeature FR4`.
                             By default, boundaries will be got from analysis parameters if
                               possible or `FR1Begin FR4End` otherwise.
      -nFeatureImputed <gene_feature>
                             Export nucleotide sequence of specified gene feature using letters
                               from germline (marked lowercase) for uncovered regions
      -allNFeaturesImputed [<from_reference_point> <to_reference_point>]
                             Export nucleotide sequence using letters from germline (marked
                               lowercase) for uncovered regions for all gene features between
                               specified reference points (in separate columns).
                             For example, `-allNFeaturesImputed FR3Begin FR4End` will export
                               `-nFeatureImputed FR3`, `-nFeatureImputed CDR3`, `-nFeatureImputed
                               FR4`.
                             By default, boundaries will be got from analysis parameters if
                               possible or `FR1Begin FR4End` otherwise.
      -aaFeatureImputed <gene_feature>
                             Export amino acid sequence of specified gene feature using letters
                               from germline (marked lowercase) for uncovered regions
      -allAAFeaturesImputed [<from_reference_point> <to_reference_point>]
                             Export amino acid sequence using letters from germline (marked
                               lowercase) for uncovered regions for all gene features between
                               specified reference points (in separate columns).
                             For example, `-allAAFeaturesImputed FR3Begin FR4End` will export
                               `-aaFeatureImputed FR3`, `-aaFeatureImputed CDR3`,
                               `-aaFeatureImputed FR4`.
                             By default, boundaries will be got from analysis parameters if
                               possible or `FR1Begin FR4End` otherwise.
      -minFeatureQuality <gene_feature>
                             Export minimal quality of specified gene feature
      -allMinFeaturesQuality [<from_reference_point> <to_reference_point>]
                             Export minimal quality for all gene features between specified
                               reference points (in separate columns).
                             For example, `-allMinFeaturesQuality FR3Begin FR4End` will export
                               `-minFeatureQuality FR3`, `-minFeatureQuality CDR3`,
                               `-minFeatureQuality FR4`.
                             By default, boundaries will be got from analysis parameters if
                               possible or `FR1Begin FR4End` otherwise.
      -allNFeaturesWithMinQuality [<from_reference_point> <to_reference_point>]
                             Export nucleotide sequences and minimal quality for all gene features
                               between specified reference points (in separate columns).
                             For example, `-allNFeaturesWithMinQuality FR3Begin FR4End` will export
                               `-nFeature FR3`, `-minFeatureQuality FR3`, `-nFeature CDR3`,
                               `-minFeatureQuality CDR3`, `-nFeature FR4`, `-minFeatureQuality FR4`.
                             By default, boundaries will be got from analysis parameters if
                               possible or `FR1Begin FR4End` otherwise.
      -allNFeaturesImputedWithMinQuality [<from_reference_point> <to_reference_point>]
                             Export nucleotide sequences and minimal quality for all gene features
                               between specified reference points (in separate columns).
                             For example, `-allNFeaturesImputedWithMinQuality FR3Begin FR4End` will
                               export `-nFeatureImputed FR3`, `-minFeatureQuality FR3`,
                               `-nFeatureImputed CDR3`, `-minFeatureQuality CDR3`,
                               `-nFeatureImputed FR4`, `-minFeatureQuality FR4`.
                             By default, boundaries will be got from analysis parameters if
                               possible or `FR1Begin FR4End` otherwise.
      -avrgFeatureQuality <gene_feature>
                             Export average quality of specified gene feature
      -allAvrgFeaturesQuality [<from_reference_point> <to_reference_point>]
                             Export average quality for all gene features between specified
                               reference points (in separate columns).
                             For example, `-allAvrgFeaturesQuality FR3Begin FR4End` will export
                               `-avrgFeatureQuality FR3`, `-avrgFeatureQuality CDR3`,
                               `-avrgFeatureQuality FR4`.
                             By default, boundaries will be got from analysis parameters if
                               possible or `FR1Begin FR4End` otherwise.
      -lengthOf <gene_feature>
                             Export length of specified gene feature.
      -allLengthOf [<from_reference_point> <to_reference_point>]
                             Export length for all gene features between specified reference points
                               (in separate columns).
                             For example, `-allLengthOf FR3Begin FR4End` will export `-lengthOf
                               FR3`, `-lengthOf CDR3`, `-lengthOf FR4`.
                             By default, boundaries will be got from analysis parameters if
                               possible or `FR1Begin FR4End` otherwise.
      -nMutations <gene_feature>
                             Extract nucleotide mutations for specific gene feature; relative to
                               germline sequence.
      -allNMutations [<from_reference_point> <to_reference_point>]
                             Extract nucleotide mutations relative to germline sequence for all
                               gene features between specified reference points (in separate
                               columns).
                             For example, `-allNMutations FR3Begin FR4End` will export `-nMutations
                               FR3`, `-nMutations CDR3`, `-nMutations FR4`.
                             By default, boundaries will be got from analysis parameters if
                               possible or `FR1Begin FR4End` otherwise.
      -nMutationsRelative <gene_feature> <relative_to_gene_feature>
                             Extract nucleotide mutations for specific gene feature relative to
                               another feature.
      -aaMutations <gene_feature>
                             Extract amino acid mutations for specific gene feature
      -allAAMutations [<from_reference_point> <to_reference_point>]
                             Extract amino acid nucleotide mutations relative to germline sequence
                               for all gene features between specified reference points (in
                               separate columns).
                             For example, `-allAAMutations FR3Begin FR4End` will export
                               `-aaMutations FR3`, `-aaMutations CDR3`, `-aaMutations FR4`.
                             By default, boundaries will be got from analysis parameters if
                               possible or `FR1Begin FR4End` otherwise.
      -aaMutationsRelative <gene_feature> <relative_to_gene_feature>
                             Extract amino acid mutations for specific gene feature relative to
                               another feature.
      -mutationsDetailed <gene_feature>
                             Detailed list of nucleotide and corresponding amino acid mutations.
                               Format <nt_mutation>:<aa_mutation_individual>:
                               <aa_mutation_cumulative>, where <aa_mutation_individual> is an
                               expected amino acid mutation given no other mutations have occurred,
                               and <aa_mutation_cumulative> amino acid mutation is the observed
                               amino acid mutation combining effect from all other. WARNING: format
                               may change in following versions.
      -allMutationsDetailed [<from_reference_point> <to_reference_point>]
                             Detailed list of nucleotide and corresponding amino acid mutations for
                               all gene features between specified reference points (in separate
                               columns).
                             For example, `-allMutationsDetailed FR3Begin FR4End` will export
                               `-mutationsDetailed FR3`, `-mutationsDetailed CDR3`,
                               `-mutationsDetailed FR4`.
                             By default, boundaries will be got from analysis parameters if
                               possible or `FR1Begin FR4End` otherwise.
      -mutationsDetailedRelative <gene_feature> <relative_to_gene_feature>
                             Detailed list of nucleotide and corresponding amino acid mutations
                               written, positions relative to specified gene feature. Format
                               <nt_mutation>:<aa_mutation_individual>:<aa_mutation_cumulative>,
                               where <aa_mutation_individual> is an expected amino acid mutation
                               given no other mutations have occurred, and <aa_mutation_cumulative>
                               amino acid mutation is the observed amino acid mutation combining
                               effect from all other. WARNING: format may change in following
                               versions.
      -positionInReferenceOf <reference_point>
                             Export position of specified reference point inside reference
                               sequences (clonal sequence / read sequence).
      -allPositionsInReference [<from_reference_point> <to_reference_point>]
                             Export position inside reference sequences (clonal sequence / read
                               sequence) for all reference points between specified (in separate
                               columns).
                             For example, `-allPositionsInReference FR3Begin FR4End` will export
                               `-positionInReferenceOf FR3Begin`, -positionInReferenceOf
                               CDR3Begin`, -positionInReferenceOf CDR3End` and
                               `-positionInReferenceOf FR4End`.
                             By default, boundaries will be got from analysis parameters if
                               possible or `FR1Begin FR4End` otherwise.
      -positionOf <reference_point>
                             Export position of specified reference point inside target sequences
                               (clonal sequence / read sequence).
      -allPositions [<from_reference_point> <to_reference_point>]
                             Export position inside target sequences (clonal sequence / read
                               sequence) for all reference points between specified (in separate
                               columns).
                             For example, `-allPositions FR3Begin FR4End` will export `-positionOf
                               FR3Begin`, -positionOf CDR3Begin`, -positionOf CDR3End` and
                               `-positionOf FR4End`.
                             By default, boundaries will be got from analysis parameters if
                               possible or `FR1Begin FR4End` otherwise.
      -defaultAnchorPoints   Outputs a list of default reference points (like CDR2Begin, FR4End,
                               etc. see documentation for the full list and formatting)
      -cloneId               Unique clone identifier
      -readCount             Number of reads assigned to the clonotype
      -readFraction          Fraction of reads assigned to the clonotype
      -targetSequences       Export aligned sequences (targets), separated with comma
      -targetQualities       Export aligned sequence (target) qualities, separated with comma
      -vIdentityPercents     V alignment identity percents
      -dIdentityPercents     D alignment identity percents
      -jIdentityPercents     J alignment identity percents
      -cIdentityPercents     C alignment identity percents
      -vBestIdentityPercent  V best alignment identity percent
      -dBestIdentityPercent  D best alignment identity percent
      -jBestIdentityPercent  J best alignment identity percent
      -cBestIdentityPercent  C best alignment identity percent
      -chains                Chains
      -topChains             Top chains
      -geneLabel <label>     Export gene label (i.e. ReliableChain)
      -tagCounts             All tags with counts
      -cellId [<(none|space|dash)>]
                             Concatenated all cell tags with specified delimiter, default delimiter
                               is `none`.
                             Example output for `-cellId`: GGATTACTCATTGCCC
                             Example output for `-cellId dash`: GGATTACT-CATTGCCC
      -tags <(Molecule|Cell|Sample)>
                             All tags values (i.e. CELL barcode or UMI sequence)
      -uniqueTagCount <(Molecule|Cell|Sample)>
                             Unique tag count
      -uniqueTagFraction <(Molecule|Cell|Sample)>
                             Fraction of unique tags (UMI, CELL, etc.) the clone or alignment
                               collected.
      -cellGroup             Cell group
      -hasStops <gene_feature>
                             Whether gene feature has stop codons inside
      -isOOF <gene_feature>  Whether gene feature is OOF
      -isProductive <gene_feature>
                             Whether specified gene feature is productive (no stops and not OOF)
