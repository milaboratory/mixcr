"test-mikelov-et-al-2021-without-contigs":
  inheritFrom: bundle-umi-kaligner2-v1-base
  mixins:
    - type: SetSpecies
      species: hs

    - type: SetTagPattern
      tagPattern: |
        ^(R1F:N{0:2}(C:gggggaaaagggttg)(R1:*)) |
        ^(R1F:N{0:2}(C:rggggaagacsgatg)(R1:*)) |
        ^(R1F:N{0:2}(C:agcgggaagaccttg)(R1:*)) |
        ^(R1F:N{0:2}(C:tatgatggggaacac)(R1:*)) \
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNNTACCTGTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNNTATGCATNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNNTCACCATNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNNTCAGATTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNNTCCTGTTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNNTTGAAATNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNNTTGTTATNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNTNACGATNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNTNATTCGNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNTNCCGTCNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNTNGATACNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNTNTACGTNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNTNNCACTGNNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNTNNCCATGNNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNTNNCTAGTNNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNTNNGCAAANNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNTNNGCTGCNNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNTNNGGATANNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNTNNTAACCNNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNTNNTCGACNNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNTNNTTATGNNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNTNNTTGCGNNTNNNNNN)tct>{2}(R2:*))

    - type: MaterialTypeRNA
    - type: LeftAlignmentBoundaryNoPoint
      floating: false
    - type: RightAlignmentBoundaryWithPoint
      floating: false
      anchorPoint: CBegin(+15)

    - type: SetClonotypeAssemblingFeatures
      features: [ "VDJRegion" ]

"test-mikelov-et-al-2021-with-contigs":
  inheritFrom: bundle-umi-kaligner2-v1-base
  mixins:
    - type: AddPipelineStep
      step: assembleContigs

    - type: SetSpecies
      species: hs

    - type: SetTagPattern
      tagPattern: |
        ^(R1F:N{0:2}(C:gggggaaaagggttg)(R1:*)) |
        ^(R1F:N{0:2}(C:rggggaagacsgatg)(R1:*)) |
        ^(R1F:N{0:2}(C:agcgggaagaccttg)(R1:*)) |
        ^(R1F:N{0:2}(C:tatgatggggaacac)(R1:*)) \
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNNTACCTGTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNNTATGCATNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNNTCACCATNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNNTCAGATTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNNTCCTGTTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNNTTGAAATNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNNTTGTTATNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNTNACGATNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNTNATTCGNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNTNCCGTCNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNTNGATACNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNTNTACGTNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNTNNCACTGNNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNTNNCCATGNNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNTNNCTAGTNNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNTNNGCAAANNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNTNNGCTGCNNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNTNNGGATANNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNTNNTAACCNNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNTNNTCGACNNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNTNNTTATGNNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNTNNTTGCGNNTNNNNNN)tct>{2}(R2:*))

    - type: MaterialTypeRNA
    - type: LeftAlignmentBoundaryNoPoint
      floating: false
    - type: RightAlignmentBoundaryWithPoint
      floating: false
      anchorPoint: CBegin(+15)

"test-airr-long-ig-base":
  inheritFrom: bundle-base
  align:
    inheritFrom: align-legacy-4.0-kaligner2
    overrides:
      species: hsa
      parameters:
        saveOriginalReads: true
  assemble:
    inheritFrom: assemble-base
    overrides:
      cloneAssemblerParameters:
        maxBadPointsPercent: 0
        separateByC: true
        cloneClusteringParameters:
          searchDepth: 4
          clusteringFilter:
            type: "relativeConcentration"
            specificMutationProbability: 1E-3

"test-generic":
  inheritFrom: bundle-base
  align:
    inheritFrom: align-legacy-4.0-default

"test-subCloningRegions":
  inheritFrom: bundle-base
  align:
    inheritFrom: align-legacy-4.0-default
  assembleContigs:
    inheritFrom: bundle-base
    overrides:
      parameters:
        subCloningRegions: [ "VDJRegion" ]
        assemblingRegions: [ "VDJRegion" ]
        postFiltering:
          type: OnlyFullyDefined

#
# Shotgun
#

"test-tcr-shotgun":
  inheritFrom: bundle-base
  flags:
    - materialType
  pipeline:
    - align
    - extend
    - assemblePartial
    - assemblePartial
    - assemble
    - exportClones
  align:
    inheritFrom: align-legacy-4.0-rna-seq
    overrides:
      parameters:
        allowPartialAlignments: true
        allowNoCDR3PartAlignments: true

#
# 10x tests
#

"10x-vdj-tcr-multi-barcode-test":
  pipeline:
    inheritFrom: pipeline-single-cell-shotgun
  align:
    inheritFrom: align-kaligner1-single-cell-v1
    overrides:
      tagPattern: ^(CELL1:N{8})(CELL2:N{8})(UMI1:N{5})(UMI2:N{5})\^(R2:*)
  refineTagsAndSort:
    runCorrection: true
    parameters:
      correctionPower: 0.001
      backgroundSubstitutionRate: 0.001
      backgroundIndelRate: 1.0e-05
      minQuality: 12
      maxSubstitutions: 2
      maxIndels: 2
      maxTotalErrors: 3
      postFilter:
        type: filter_and
        operands:
          - type: filter_groups
            groupingKeys:
              - CELL1
              - CELL2
              - UMI1
              - UMI2
            predicates:
              - metrics:
                  - type: group_metric_sum_weight
                    reportHist:
                      log: true
                      binNumber: 0
                      minBinWidth: 0.2
                operator:
                  type: group_operator_otsu1
                  logX: true
          - type: filter_groups
            groupingKeys:
              - CELL1
              - CELL2
            predicates:
              - metrics:
                  - type: group_metric_nunique
                    reportHist:
                      log: true
                      binNumber: 0
                      minBinWidth: 0.2
                    keys:
                      - UMI1
                      - UMI2
                operator:
                  type: group_operator_range
                  lower: 3.0
  assemblePartial:
    inheritFrom: assemblePartial-universal
  assemble:
    inheritFrom: assemble-base-with-consensus
    overrides:
      clnaOutput: true
      cloneAssemblerParameters:
        postFilters:
          - type: filter_in_groups
            isolationKeys:
              - geneLabel:ReliableChain
              - tag:CELL1
              - tag:CELL2
            nestedFilter:
              type: filter_groups
              groupingKeys:
                - clone
              predicates:
                - metrics:
                    - type: group_metric_nunique
                      keys:
                        - tag:UMI1
                        - tag:UMI2
                  operator:
                    type: group_operator_cumtop
                    share: 0.95
          - type: filter_in_groups
            isolationKeys:
              - tag:CELL1
              - tag:CELL2
            nestedFilter:
              type: filter_groups
              groupingKeys:
                - clone
              predicates:
                - metrics:
                    - type: group_metric_nunique
                      keys:
                        - tag:UMI1
                        - tag:UMI2
                  operator:
                    type: group_operator_cumtop
                    share: 0.99
  assembleContigs:
    inheritFrom: assembleContigs-universal
  exportAlignments:
    inheritFrom: exportAlignments-base
  exportClones:
    chains: ALL
    splitFilesBy: [ ]
    fields:
      - field: "-cloneId"
      - field: "-allTags"
        args: [ "Cell" ]
      - field: "-readCount"
      - field: "-allUniqueTagsCount"
        args: [ "Molecule" ]
      - field: "-targetSequences"
      - field: "-targetQualities"
      - field: "-vHitsWithScore"
      - field: "-dHitsWithScore"
      - field: "-jHitsWithScore"
      - field: "-cHitsWithScore"
      - field: "-vAlignments"
      - field: "-dAlignments"
      - field: "-jAlignments"
      - field: "-cAlignments"
      - field: "-allNFeaturesWithMinQuality"
      - field: "-allAaFeatures"
      - field: "-defaultAnchorPoints"

