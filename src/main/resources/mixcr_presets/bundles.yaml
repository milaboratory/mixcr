#
# Meta presets ("abstract")
#

"_universal":
  pipeline:
    inheritFrom: pipeline_base
  exportAlignments:
    inheritFrom: export_base
  assemblePartial:
    inheritFrom: assemblePartial_universal
  refineTagsAndSort:
    inheritFrom: refineTagsAndSort_universal
  extend:
    inheritFrom: extend_universal
  assemble:
    inheritFrom: assemble_universal
  assembleContigs:
    inheritFrom: assembleContigs_universal
  exportClones:
    inheritFrom: export_base

#
# Legacy presets from 4.0 parameter sets
#

"default_4.0":
  inheritFrom: _universal
  align:
    inheritFrom: align_default_4.0

"rna-seq_4.0":
  inheritFrom: _universal
  align:
    inheritFrom: align_rna-seq_4.0

"kAligner2_4.0":
  inheritFrom: _universal
  align:
    inheritFrom: align_kaligner2_4.0

#
# Amplicon presets
#

"tcr_amplicon":
  inheritFrom: _universal
  flags:
    - materialType
    - leftSideAmplificationPrimer
    - rightSideAmplificationPrimer
  align:
    inheritFrom: align_rna-seq_4.0

"bcr_amplicon":
  inheritFrom: _universal
  flags:
    - materialType
    - leftSideAmplificationPrimer
    - rightSideAmplificationPrimer
  align:
    inheritFrom: align_kaligner2_4.0

#
# UMI amplicon pipelines
#

"tcr_amplicon_umi":
  inheritFrom: _universal
  flags:
    - materialType
    - leftSideAmplificationPrimer
    - rightSideAmplificationPrimer
    - tagPattern
  align:
    inheritFrom: align_rna-seq_4.0

"bcr_amplicon_umi":
  inheritFrom: _universal
  flags:
    - materialType
    - leftSideAmplificationPrimer
    - rightSideAmplificationPrimer
    - tagPattern
  align:
    inheritFrom: align_kaligner2_4.0

#
# Shotgun
#

"tcr_shotgun":
  inheritFrom: _universal
  flags:
    - materialType
  pipeline:
    - align
    - extend
    - assemblePartial
    - assemblePartial
    - assemble
    - exportClones
  align:
    inheritFrom: align_rna-seq_4.0
    overrides:
      parameters:
        allowPartialAlignments: true
        allowNoCDR3PartAlignments: true

#
# Single-cell pipelines
#

"10x_vdj":
  inheritFrom: _universal
  pipeline:
    - align
    - refineTagsAndSort
    - assemblePartial
    - assemble
    - assembleContigs
    - exportClones
  refineTagsAndSort:
    inheritFrom: refineTagsAndSort_universal
    overrides:
      whitelists:
        CELL: builtin:737K-august-2016
      parameters:
        postFilter:
          type: "filter_and"
          operands:
            - type: "filter_groups"
              groupingKeys:
                - "CELL"
                - "UMI"
              predicates:
                - metrics:
                    - type: "group_metric_sum_weight"
                      reportHist:
                        log: true
                        binNumber: 0 # don't limit number of bins, use only minBinWidth
                        minBinWidth: 0.2 # in respect to log10 of the value
                  operator:
                    type: "group_operator_otsu1"
                    logX: true
            - type: "filter_groups"
              groupingKeys:
                - "CELL"
              predicates:
                - metrics:
                    - type: "group_metric_nunique"
                      keys:
                        - "UMI"
                      reportHist:
                        log: true
                        binNumber: 0 # don't limit number of bins, use only minBinWidth
                        minBinWidth: 0.2 # in respect to log10 of the value
                  operator:
                    type: "group_operator_range"
                    lower: 2.0
  assemble:
    inheritFrom: assemble_universal
    overrides:
      inferMinRecordsPerConsensus: false
      clnaOutput: true

"10x_vdj_bcr":
  inheritFrom: 10x_vdj
  mixins:
    - type: KeepNonCDR3Alignments
    - type: SetTagPattern
      tagPattern: ^(CELL:N{16})(UMI:N{10})\^(R2:*)
    - type: AddExportClonesField
      insertIndex: 2
      field: -uniqueTagCount
      args: [ "UMI" ]
    - type: AddExportClonesField
      insertIndex: 1
      field: -tag
      args: [ "CELL" ]
    - type: LeftAlignmentBoundaryNoPoint
      floating: false
    - type: RightAlignmentBoundaryNoPoint
      floating: false
      geneType: C
  align:
    inheritFrom: align_kaligner2_4.0

"10x_vdj_tcr":
  inheritFrom: 10x_vdj
  mixins:
    - type: KeepNonCDR3Alignments
    - type: SetTagPattern
      tagPattern: ^(CELL:N{16})(UMI:N{10})\^(R2:*)
    - type: AddExportClonesField
      insertIndex: 2
      field: -uniqueTagCount
      args: [ "UMI" ]
    - type: AddExportClonesField
      insertIndex: 1
      field: -tag
      args: [ "CELL" ]
    - type: LeftAlignmentBoundaryNoPoint
      floating: false
    - type: RightAlignmentBoundaryNoPoint
      floating: false
      geneType: C
  align:
    inheritFrom: align_rna-seq_4.0

#
# UMI
#

"takara-smarter-human-bcr":
  inheritFrom: _universal
  pipeline:
    - align
    - refineTagsAndSort
    - assemble
    - exportClones
  mixins:
    - type: SetSpecies
      species: hs
    - type: KeepNonCDR3Alignments
    - type: SetClonotypeAssemblingFeatures
      features: [ "VDJRegion" ]
    - type: AddExportClonesField
      insertIndex: 2
      field: -uniqueTagCount
      args: [ "UMI" ]
  align:
    inheritFrom: align_kaligner2_4.0
    overrides:
      tagPattern: ^N{7}(R1:*) \ ^(UMI:N{12})N{4}(R2:*)
  refineTagsAndSort:
    inheritFrom: refineTagsAndSort_universal
    overrides:
      parameters:
        postFilter:
          type: "filter_groups"
          groupingKeys:
            - "UMI"
          predicates:
            - metrics:
                - type: "group_metric_sum_weight"
                  reportHist:
                    log: true
                    binNumber: 0 # don't limit number of bins, use only minBinWidth
                    minBinWidth: 0.2 # in respect to log10 of the value
              operator:
                type: "group_operator_otsu1"
                logX: true

"mikelov-et-al-2021":
  inheritFrom: _universal
  pipeline:
    - align
    - refineTagsAndSort
    - assemble
    - exportClones
  mixins:
    - type: SetSpecies
      species: hs
    - type: SetClonotypeAssemblingFeatures
      features: [ "VDJRegion" ]
    - type: MaterialTypeRNA
    - type: AddExportClonesField
      insertIndex: 2
      field: -uniqueTagCount
      args: [ "UMI" ]
    - type: LeftAlignmentBoundaryNoPoint
      floating: false
    - type: RightAlignmentBoundaryWithPoint
      floating: false
      anchorPoint: CBegin(+15)
  align:
    inheritFrom: align_kaligner2_4.0
    overrides:
      tagPattern: |
        ^(R1F:N{0:2}(C:gggggaaaagggttg)(R1:*)) |
        ^(R1F:N{0:2}(C:rggggaagacsgatg)(R1:*)) |
        ^(R1F:N{0:2}(C:agcgggaagaccttg)(R1:*)) |
        ^(R1F:N{0:2}(C:tatgatggggaacac)(R1:*)) \
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNNTACCTGTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNNTATGCATNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNNTCACCATNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNNTCAGATTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNNTCCTGTTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNNTTGAAATNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNNTTGTTATNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNTNACGATNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNTNATTCGNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNTNCCGTCNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNTNGATACNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNNTNTACGTNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNTNNCACTGNNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNTNNCCATGNNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNTNNCTAGTNNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNTNNGCAAANNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNTNNGCTGCNNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNTNNGGATANNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNTNNTAACCNNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNTNNTCGACNNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNTNNTTATGNNTNNNNNN)tct>{2}(R2:*)) |
        ^(R2F:tggtatcaacgcagagtac(UMI:NNNNTNNTTGCGNNTNNNNNN)tct>{2}(R2:*))
  refineTagsAndSort:
    inheritFrom: refineTagsAndSort_universal
    overrides:
      parameters:
        postFilter:
          type: "filter_groups"
          groupingKeys:
            - "UMI"
          predicates:
            - metrics:
                - type: "group_metric_sum_weight"
                  reportHist:
                    log: true
                    binNumber: 0 # don't limit number of bins, use only minBinWidth
                    minBinWidth: 0.2 # in respect to log10 of the value
              operator:
                type: "group_operator_otsu1"
                logX: true
