"singleron-2.0.1-vdj-cdr3":
  pipeline:
    - "align"
    - "refineTagsAndSort"
    - "assemble"
    - "exportClones"
  align:
    inheritFrom: "align-kaligner1-base-v1"
  mixins:
    - type: SetSpecies
      species: hs
    - type: SetTagPattern
      tagPattern: ^(CELL1:N{8})N{16}(CELL2:N{8})N{16}(CELL3:N{8})N(UMI:N{8})N{18}(R1:*)\^(R2:*)
  refineTagsAndSort:
    inheritFrom: "refineTagsAndSort-base"
    overrides:
      whitelists:
        CELL1: builtin:singleron-whitelist
        CELL2: builtin:singleron-whitelist
        CELL3: builtin:singleron-whitelist
      parameters:
        postFilter:
          type: filter_and
          operands:
            - type: filter_groups
              groupingKeys:
                - allTags:Cell
                - allTags:Molecule
              predicates:
                - metrics:
                    - type: group_metric_sum_weight
                      reportHist:
                        log: true
                        binNumber: 0
                        minBinWidth: 0.2
                  operator:
                    type: group_operator_otsu1
                    logX: true
                    minimalSample: 20
                    fallbackThreshold: 1.0
  assemble:
    inheritFrom: "assemble-base-with-consensus"
  exportClones:
    chains: ALL
    splitFilesBy: [ ]
    fields:
      - field: "-cloneId"
      - field: "-tags"
        args: [ "Cell" ]
      - field: "-readCount"
      - field: "-uniqueTagCount"
        args: [ "Molecule" ]
      - field: "-targetSequences"
      - field: "-targetQualities"
      - field: "-vHitsWithScore"
      - field: "-dHitsWithScore"
      - field: "-jHitsWithScore"
      - field: "-cHitsWithScore"
      - field: "-vAlignments"
      - field: "-dAlignments"
      - field: "-jAlignments"
      - field: "-cAlignments"
      - field: "-nFeature"
        args: [ "FR1" ]
      - field: "-minFeatureQuality"
        args: [ "FR1" ]
      - field: "-nFeature"
        args: [ "CDR1" ]
      - field: "-minFeatureQuality"
        args: [ "CDR1" ]
      - field: "-nFeature"
        args: [ "FR2" ]
      - field: "-minFeatureQuality"
        args: [ "FR2" ]
      - field: "-nFeature"
        args: [ "CDR2" ]
      - field: "-minFeatureQuality"
        args: [ "CDR2" ]
      - field: "-nFeature"
        args: [ "FR3" ]
      - field: "-minFeatureQuality"
        args: [ "FR3" ]
      - field: "-nFeature"
        args: [ "CDR3" ]
      - field: "-minFeatureQuality"
        args: [ "CDR3" ]
      - field: "-nFeature"
        args: [ "FR4" ]
      - field: "-minFeatureQuality"
        args: [ "FR4" ]
      - field: "-aaFeature"
        args: [ "FR1" ]
      - field: "-aaFeature"
        args: [ "CDR1" ]
      - field: "-aaFeature"
        args: [ "FR2" ]
      - field: "-aaFeature"
        args: [ "CDR2" ]
      - field: "-aaFeature"
        args: [ "FR3" ]
      - field: "-aaFeature"
        args: [ "CDR3" ]
      - field: "-aaFeature"
        args: [ "FR4" ]
      - field: "-defaultAnchorPoints"